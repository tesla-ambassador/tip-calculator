{"ast":null,"code":"var _jsxFileName = \"/Users/umuhozafaith/Desktop/Projects/tip-calculator-app-main/tip-calculator-solution/src/components/tip.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import Buttons from './buttons';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isError = false;\n\nfunction Tip(props) {\n  _s();\n\n  const [bill, setNewBill] = useState('');\n  const [custom, setCustom] = useState('');\n  const [people, setPeople] = useState('');\n  const tips = [5, 10, 15, 25, 50];\n\n  function setTip(e) {\n    const customInput = e.target.value;\n    setCustom(customInput);\n  }\n\n  function setBill(e) {\n    const newBill = e.target.value;\n    setNewBill(newBill);\n  }\n\n  function setNewPeople(e) {\n    const newPeople = e.target.value;\n    setPeople(newPeople);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tip-parent sub-parent\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"labels\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dark-grayish\",\n          children: \"Bill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: isError ? 'error' : 'no-error',\n          children: \"Can't be zero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textfield-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icons\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/icon-dollar.svg\",\n            alt: \"dollar sign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: bill,\n          onChange: setBill,\n          type: \"text\",\n          placeholder: \"0\",\n          className: \"text-field right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dark-grayish\",\n        children: \"Select Tip %\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gridItems\",\n        children: [tips.map((tip, index) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            value: tip,\n            onClick: () => {\n              props.onClick(tip, bill, people);\n            },\n            className: \"tip-input\",\n            children: tip\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 32\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: setTip,\n          value: custom,\n          placeholder: \"Custom\",\n          type: \"text\",\n          onDoubleClick: () => {\n            props.onClickCustom(custom, bill, people);\n          },\n          className: \"right tip-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"labels\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dark-grayish\",\n          children: \"Number of People\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: isError ? 'error' : 'no-error',\n          children: \"Can't be zero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textfield-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icons\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/icon-person.svg\",\n            alt: \"person icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: setNewPeople,\n          value: people,\n          placeholder: \"0\",\n          className: \"text-field right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tip, \"uaAfWnbDWyNWPtfvc9CTjlbRAxs=\");\n\n_c = Tip;\nexport default Tip;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tip\");","map":{"version":3,"sources":["/Users/umuhozafaith/Desktop/Projects/tip-calculator-app-main/tip-calculator-solution/src/components/tip.jsx"],"names":["React","useState","isError","Tip","props","bill","setNewBill","custom","setCustom","people","setPeople","tips","setTip","e","customInput","target","value","setBill","newBill","setNewPeople","newPeople","map","tip","index","onClick","onClickCustom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n// import Buttons from './buttons';\nconst isError = false;\n\n\n\nfunction Tip(props) {\n    const [bill, setNewBill] = useState('');\n    const [custom, setCustom] = useState('');\n    const [people, setPeople] = useState('');\n\n    const tips = [5, 10, 15, 25, 50];\n\n    function setTip(e) {\n        const customInput = e.target.value;\n        setCustom(customInput);\n    }\n\n    function setBill(e) {\n        const newBill = e.target.value;\n        setNewBill(newBill);\n    }\n\n    function setNewPeople(e) {\n        const newPeople = e.target.value;\n        setPeople(newPeople);\n    }\n\n    return (\n        <div className='tip-parent sub-parent'>\n            <div className=\"input-container\">\n                <div className='labels'>\n                    <span className='dark-grayish'>Bill</span>\n                    <span className={isError ? 'error' : 'no-error'} >Can't be zero</span>\n                </div>\n                <div className=\"textfield-container\">\n                    <div className=\"icons\">\n                        <img src=\"/images/icon-dollar.svg\" alt=\"dollar sign\" />\n                    </div>\n                    <input value={bill} onChange={setBill} type=\"text\" placeholder='0' className='text-field right' />\n                </div>\n            </div>\n            <div className=\"input-container\">\n                <span className='dark-grayish'>Select Tip %</span>\n                <div className=\"gridItems\">\n                    {tips.map((tip, index) => {\n                        return <button value={tip} key={index} onClick={() => {\n                            props.onClick(tip, bill, people);\n                        }} className='tip-input' >{tip}</button>\n                    })}\n                    <input onChange={setTip} value={custom} placeholder=\"Custom\" type=\"text\" onDoubleClick={() => {\n                        props.onClickCustom(custom, bill, people);\n                    }} className='right tip-input' />\n                </div>\n            </div>\n            <div className='input-container'>\n                <div className='labels'>\n                    <span className='dark-grayish'>Number of People</span>\n                    <span className={isError ? 'error' : 'no-error'} >Can't be zero</span>\n                </div>\n                <div className=\"textfield-container\">\n                    <div className=\"icons\">\n                        <img src=\"/images/icon-person.svg\" alt=\"person icon\" />\n                    </div>\n                    <input type=\"text\" onChange={setNewPeople} value={people} placeholder='0' className='text-field right' />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Tip;"]},"metadata":{},"sourceType":"module"}